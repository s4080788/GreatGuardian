import discord
import asyncio
import json
import requests
from discord.ext import commands
from discord.utils import utcnow
from datetime import datetime, timedelta
import os
from flask import Flask
import threading

app = Flask(__name__)

@app.route("/")
def home():
    return "I'm awake!"

def run_server():
    app.run(host="0.0.0.0", port=8080)

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
server_thread = threading.Thread(target=run_server)
server_thread.start()

intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

discord_token = os.getenv("DISCORD_TOKEN")
cloudflare_api_key = os.getenv("CLOUDFLARE_API_KEY")
cloudflare_ai_url = os.getenv("CLOUDFLARE_AI_URL")



# –†–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø–∏–Ω–≥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
ADMIN_ROLE = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"  # –†–æ–ª—å –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø–∏–Ω–≥–∞

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
try:
    with open("reputation.json", "r") as f:
        reputation = json.load(f)
except FileNotFoundError:
    reputation = {}

def save_reputation():
    with open("reputation.json", "w") as f:
        json.dump(reputation, f)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
intents = discord.Intents.default()
intents.messages = True
intents.guilds = True
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

def analyze_with_cloudflare(text):
    headers = {
        "Authorization": f"Bearer {cloudflare_api_key}",
        "Content-Type": "application/json"
    }
    data = {
        "messages": [
            {"role": "system", "content": "You are a moderator. You must check that the message does not contain direct insults or provocations. Be fair, if you doubt a violation, then there is no violation, also there is may be joke. Answer only 'there is a violation' or 'there is no violation'."},
            {"role": "user", "content": text}
        ]
    }
    response = requests.post(cloudflare_ai_url, json=data, headers=headers)
    if response.status_code == 200:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –æ—Ç–≤–µ—Ç–∞
        analysis = response.json().get("result", {}).get("response", "")
        # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–≥—Ä–µ—Å—Å–∏–∏ –∏–ª–∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏
        return "there is a violation" in analysis.lower()
    return False

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!')

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Cloudflare 
    is_toxic = analyze_with_cloudflare(message.content)

    if is_toxic:
        user_id = str(message.author.id)
        reputation[user_id] = min(reputation.get(user_id, 0) + 1, 3)
        save_reputation()

        if reputation[user_id] >= 3:  # –ü—Ä–∏ 3 –∏ –±–æ–ª–µ–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö –º—É—Ç
            if message.author.guild_permissions.administrator:
                await message.channel.send(f"{message.author.mention}, –≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ —è –Ω–µ –º–æ–≥—É –≤—ã–¥–∞—Ç—å –≤–∞–º –º—É—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–∏–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º.")
            else:
                # –í—Ä–µ–º–µ–Ω–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
                await message.author.timeout(utcnow() + timedelta(seconds=60))  # 60 —Å–µ–∫—É–Ω–¥
                await message.channel.send(f'üö® {message.author.mention} –≤—ã–¥–∞–Ω –º—É—Ç –∑–∞ –∞–≥—Ä–µ—Å—Å–∏—é –Ω–∞ 60 —Å–µ–∫—É–Ω–¥!')
            # –ü–∏–Ω–≥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å —Ä–æ–ª—å—é "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            admin_role = discord.utils.get(message.guild.roles, name=ADMIN_ROLE)
            if admin_role:
                await message.channel.send(f'{admin_role.mention}, –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è!')
        else:
            await message.channel.send(f'‚ö†Ô∏è {message.author.mention}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–π –∏ –∞–≥—Ä–µ—Å—Å–∏–∏ –≤ –æ–±—â–µ–Ω–∏–∏.')
    else:
        user_id = str(message.author.id)
        if reputation[user_id] >= 0:
            reputation[user_id] = reputation.get(user_id, 0) - 1
            save_reputation()
            
    await bot.process_commands(message)

@bot.command(name="rep")
async def reputation_command(ctx, member: discord.Member = None):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    if member is None:
        member = ctx.author

    user_id = str(member.id)
    user_reputation = reputation.get(user_id, 0)

    await ctx.send(f"–†–µ–ø—É—Ç–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}: {user_reputation}")
    
bot.run(discord_token)
